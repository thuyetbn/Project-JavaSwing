/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.AccountDAO;
import DAO.ClassDAO;
import DAO.KhoaHocDAO;
import DAO.StudentDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Account;
import model.ClassRoom;
import model.KhoaHoc;
import model.Student;

/**
 *
 * @author BinDz
 */
public class FrmDiaglogStrudent extends javax.swing.JDialog {

    /**
     * Creates new form FrmDiaglogStrudent
     */
    public FrmDiaglogStrudent(java.awt.Frame parent, boolean modal, Student st) {
        super(parent, modal);
        initComponents();
        StudentDAO sd = new StudentDAO();
        this.st = st;
        setLocationRelativeTo(null);
        loadcombobox();
        initData();

    }
    Student st;
    List<ClassRoom> lc;
    List<Student> ls;
    public static String regexemail = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
    public static String regex_Phone = "^(09|03|08|05|07)+([0-9]{8})$";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtMaSV = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        gender = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        className = new javax.swing.JComboBox<>();
        jDateStudent = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();
        Status = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        add = new rojerusan.RSButtonMetro();
        jLabel1 = new javax.swing.JLabel();
        update = new rojerusan.RSButtonMetro();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm sinh viên");
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMaSV.setEditable(false);
        txtMaSV.setBackground(new java.awt.Color(255, 255, 255));
        txtMaSV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(txtMaSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -5, 340, 20));

        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 25, 340, 20));

        txtPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 55, 340, 20));

        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 85, 340, 20));

        txtAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 115, 340, 20));

        gender.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(gender);
        gender.setSelected(true);
        gender.setText("Nam");
        jPanel2.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, 20));

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Nữ");
        jPanel2.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        jPanel2.add(className, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 340, -1));

        jDateStudent.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jDateStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 340, 30));

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setText("Đã tốt nghiệp");
        jPanel2.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        Status.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(Status);
        Status.setSelected(true);
        Status.setText("Đang theo học");
        jPanel2.add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 340, 330));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mã sinh viên:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Tên sinh viên:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 25, -1, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Số điện thoại:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 55, -1, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Email:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 85, -1, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Địa chỉ:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Ngày sinh:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Giới tính:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Trạng thái:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Lớp học:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, 20));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 290));

        add.setBackground(new java.awt.Color(51, 204, 255));
        add.setText("Thêm");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, 140, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_student_male_25px.png"))); // NOI18N
        jLabel1.setText("Thông tin sinh viên");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 370, 40));

        update.setBackground(new java.awt.Color(51, 204, 255));
        update.setText("Cập nhật");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, 140, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initData() {
        if (st != null) {
            add.setVisible(false);
            txtMaSV.setText(st.getMaSV());
            txtName.setText(st.getName());
            txtPhone.setText(st.getPhone());
            txtEmail.setText(st.getEmail());
            txtAddress.setText(st.getAddress());
            Date date = null;
            try {
                date = new SimpleDateFormat("yyyy-MM-dd").parse(st.getBirthday());
            } catch (ParseException ex) {
                Logger.getLogger(FrmDiaglogAccount.class.getName()).log(Level.SEVERE, null, ex);
            }
            jDateStudent.setDate(date);
            if (st.getGender() == 0) {
                gender.setSelected(true);
            } else {
                jRadioButton3.setSelected(true);
            }
            className.setSelectedIndex((st.getClass_ID()) - 1);

        } else {
            setMaSV();
            update.setVisible(false);
            Date date = new Date();
            jDateStudent.setDate(date);
        }
    }

    private void loadcombobox() {
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();

        ClassDAO cd = new ClassDAO();
        lc = cd.getAllClass();
        for (ClassRoom c : lc) {
            dcm.addElement(c.getName());
        }
        className.setModel(dcm);

    }

    private boolean checkMail(String mail) {
        StudentDAO sd = new StudentDAO();
        ls = sd.getAllStudent();
        boolean check = false;
        for (Student t : ls) {
            if (t.getEmail().equals(mail)) {
                check = true;
            }
        }
        return check;
    }

    private boolean checkPhone(String phone) {
        StudentDAO sd = new StudentDAO();
        ls = sd.getAllStudent();
        boolean check = false;
        for (Student t : ls) {
            if (t.getPhone().equals(phone)) {
                check = true;
            }
        }
        return check;
    }

    private void setMaSV() {
        StudentDAO sd = new StudentDAO();
        ls = sd.getAllStudent();
        int i = ls.size();
        if (i == 0) {
            txtMaSV.setText("B" + String.format("%03d", 1));
        } else {
            String masv = ls.get(i - 1).getMaSV().toString();
            masv = masv.substring(1);
            int id = (Integer.parseInt(masv)) + 1;
            txtMaSV.setText("B" + String.format("%03d", id));
        }

    }

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String new_masv = txtMaSV.getText();
        String new_name = txtName.getText();
        String new_phone = txtPhone.getText();
        String new_email = txtEmail.getText();
        String new_address = txtAddress.getText();
        String birthday = String.valueOf(new SimpleDateFormat("yyyy/MM/dd").format(jDateStudent.getDate()));
        int new_gender;
        if (gender.isSelected()) {
            new_gender = 0;
        } else {
            new_gender = 1;
        }
        int new_class_id = lc.get(className.getSelectedIndex()).getId();
        int new_status;
        boolean validate = true;
        if (Status.isSelected()) {
            new_status = 0;
        } else {
            new_status = 1;
        }
        if (new_name.length() == 0 || new_phone.length() == 0 || new_email.length() == 0 || new_address.length() == 0) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Vui lòng nhập đầy đủ thông \ntin vào các trường để tiến \nhành thêm mới</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validate = false;
        }
        if (!new_phone.matches(regex_Phone)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Vui lòng điền đúng \nsố điện thoại\n để tiếp tục</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validate = false;
        }
        if (checkMail(new_email)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Email đã được sử dụng!</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validate = false;
        }
        if (!new_email.matches(regexemail)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Email không đúng \nđịnh dạng</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validate = false;
        }
        if (checkPhone(new_phone)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Phone đã được sử dụng!</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validate = false;
        }
        if (validate == true) {
            Student new_Student = new Student(new_masv, new_name, new_phone, new_email, new_address, birthday, new_gender, new_status, new_class_id);
            StudentDAO SC = new StudentDAO();
            if (SC.addStudent(new_Student) == 1) {
                MessageBox mb = new MessageBox(null, true, "<html><pre>Bạn đã thêm học sinh \nmới thành công</pre></html>");
                mb.setLocationRelativeTo(this);
                mb.setVisible(true);
                dispose();
            } else {
                MessageBox mb = new MessageBox(null, true, "<html><pre>Đã có lỗi xảy ra\n vui lòng kiểm tra lại</pre></html>");
                mb.setLocationRelativeTo(this);
                mb.setVisible(true);
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int new_id = st.getId();

        String new_masv = txtMaSV.getText();
        String new_name = txtName.getText();
        String new_phone = txtPhone.getText();
        String new_email = txtEmail.getText();
        String new_address = txtAddress.getText();
        String birthday = String.valueOf(new SimpleDateFormat("yyyy/MM/dd").format(jDateStudent.getDate()));
        int new_gender;
        if (gender.isSelected()) {
            new_gender = 0;
        } else {
            new_gender = 1;
        }

        int new_class_id = lc.get(className.getSelectedIndex()).getId();

        int new_status;
        String oldPhone = st.getPhone();
        String oldEmail = st.getEmail();
        boolean validation = true;

        if (Status.isSelected()) {
            new_status = 0;
        } else {
            new_status = 1;
        }
        if (new_name.length() == 0 || new_phone.length() == 0 || new_email.length() == 0 || new_address.length() == 0) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Vui lòng nhập đầy\n đủ thông tin\n vào các trường để tiến \nhành thêm mới</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validation = false;
        }
//        if (!new_email.equals(oldEmail)) {
//            if (checkMail(new_email)) {
//                MessageBox mb = new MessageBox(null, true, "<html><pre>Email \nđã được sử dụng!</pre></html>");
//                mb.setLocationRelativeTo(this);
//                mb.setVisible(true);
//            }
//            validate = false;
//        }
//        if (!new_phone.equals(oldPhone)) {
//            if (checkPhone(new_phone)) {
//                MessageBox mb = new MessageBox(null, true, "<html><pre>Số điện thoại \nđã được sử dụng!</pre></html>");
//                mb.setLocationRelativeTo(this);
//                mb.setVisible(true);
//            }
//            validation = false;
//        }
        if (!new_phone.matches(regex_Phone)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Vui lòng điền đúng \nsố điện thoại\n để tiếp tục</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validation = false;
        }
        if (!new_email.matches(regexemail)) {
            MessageBox mb = new MessageBox(null, true, "<html><pre>Email không đúng \nđịnh dạng</pre></html>");
            mb.setLocationRelativeTo(this);
            mb.setVisible(true);
            validation = false;
        }
        if (validation == true) {
            System.out.println("1");
            Student new_Student = new Student(new_id, new_masv, new_name, new_phone, new_email, new_address, birthday, new_gender, new_status, new_class_id);
            StudentDAO SC = new StudentDAO();
            if (SC.updateAccount(new_Student) == 1) {
                MessageBox mb = new MessageBox(null, true, "<html><pre>Bạn đã cập nhật học \nsinh mới thành công</pre></html>");
                mb.setLocationRelativeTo(this);
                mb.setVisible(true);
                dispose();
            } else {
                MessageBox mb = new MessageBox(null, true, "<html><pre>Đã có lỗi xảy ra\n vui lòng kiểm tra lại</pre></html>");
                mb.setLocationRelativeTo(this);
                mb.setVisible(true);
            }
        }

    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDiaglogStrudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDiaglogStrudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDiaglogStrudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDiaglogStrudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmDiaglogStrudent dialog = new FrmDiaglogStrudent(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Status;
    private rojerusan.RSButtonMetro add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> className;
    private javax.swing.JRadioButton gender;
    private com.toedter.calendar.JDateChooser jDateStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private rojerusan.RSButtonMetro update;
    // End of variables declaration//GEN-END:variables
}
